<Window x:Class="LedCubeAnimator.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:LedCubeAnimator.View.UserControls"
        xmlns:converters="clr-namespace:LedCubeAnimator.View.Converters"
        xmlns:model="clr-namespace:LedCubeAnimator.Model.Animations.Data"
        mc:Ignorable="d"
        md:DialogServiceViews.IsRegistered="True"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        Title="MainWindow"
        WindowState="Maximized"
        Height="450"
        Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <converters:ColorToValueConverter x:Key="ColorToValueConverter" />
            <converters:IntToDateTimeConverter x:Key="IntToDateTimeConverter" />
            <converters:IntToDoubleConverter x:Key="IntToDoubleConverter" />
            <sys:Int32 x:Key="StartDateCorrection">0</sys:Int32>
            <sys:Int32 x:Key="EndDateCorrection">1</sys:Int32>
            <sys:Double x:Key="StartSliderCorrection">-0.5</sys:Double>
            <sys:Double x:Key="EndSliderCorrection">0.5</sys:Double>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Icons/New.xaml" />
                <ResourceDictionary Source="/View/Icons/Open.xaml" />
                <ResourceDictionary Source="/View/Icons/Redo.xaml" />
                <ResourceDictionary Source="/View/Icons/RedoGray.xaml" />
                <ResourceDictionary Source="/View/Icons/Save.xaml" />
                <ResourceDictionary Source="/View/Icons/SaveAs.xaml" />
                <ResourceDictionary Source="/View/Icons/Undo.xaml" />
                <ResourceDictionary Source="/View/Icons/UndoGray.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ClosingCommand}"
                                PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Command="{Binding UndoCommand}"
                    Key="Z"
                    Modifiers="Ctrl" />
        <KeyBinding Command="{Binding RedoCommand}"
                    Key="Y"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top"
              IsMainMenu="True">
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Icon="{StaticResource NewIcon}"
                          Command="{Binding NewCommand}" />
                <MenuItem Header="Open..."
                          Icon="{StaticResource OpenIcon}"
                          Command="{Binding OpenCommand}" />
                <MenuItem Header="Save"
                          Icon="{StaticResource SaveIcon}"
                          Command="{Binding SaveCommand}" />
                <MenuItem Header="Save as..."
                          Icon="{StaticResource SaveAsIcon}"
                          Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="Export">
                    <MenuItem Header="MW LED Cube 4x4x4..."
                              Command="{Binding ExportMWCommand}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit"
                          Click="Exit_Click" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo"
                          Command="{Binding UndoCommand}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Icon"
                                    Value="{StaticResource UndoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Icon"
                                            Value="{StaticResource UndoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Redo"
                          Command="{Binding RedoCommand}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Icon"
                                    Value="{StaticResource RedoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Icon"
                                            Value="{StaticResource RedoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Tile">
                <MenuItem Header="Frame"
                          Command="{Binding AddFrameCommand}" />
                <Separator />
                <MenuItem Header="Group"
                          Command="{Binding AddGroupCommand}" />
                <Separator />
                <MenuItem Header="GradientEffect"
                          Command="{Binding AddGradientEffectCommand}" />
                <Separator />
                <MenuItem Header="MoveEffect"
                          Command="{Binding AddMoveEffectCommand}" />
                <MenuItem Header="RotateEffect"
                          Command="{Binding AddRotateEffectCommand}" />
                <MenuItem Header="ScaleEffect"
                          Command="{Binding AddScaleEffectCommand}" />
                <MenuItem Header="ShearEffect"
                          Command="{Binding AddShearEffectCommand}" />
                <Separator />
                <MenuItem Header="LinearDelay"
                          Command="{Binding AddLinearDelayCommand}" />
                <MenuItem Header="RadialDelay"
                          Command="{Binding AddRadialDelayCommand}" />
                <MenuItem Header="SphericalDelay"
                          Command="{Binding AddSphericalDelayCommand}" />
                <MenuItem Header="AngularDelay"
                          Command="{Binding AddAngularDelayCommand}" />
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Cube settings..."
                          Command="{Binding CubeSettingsCommand}" />
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top"
                     IsLocked="True"
                     Background="#F0F0F0">
            <ToolBar>
                <Button ToolTip="New"
                        Content="{StaticResource NewIcon}"
                        Command="{Binding NewCommand}" />
                <Button ToolTip="Open..."
                        Content="{StaticResource OpenIcon}"
                        Command="{Binding OpenCommand}" />
                <Button ToolTip="Save"
                        Content="{StaticResource SaveIcon}"
                        Command="{Binding SaveCommand}" />
                <Button ToolTip="Save as..."
                        Content="{StaticResource SaveAsIcon}"
                        Command="{Binding SaveAsCommand}" />
            </ToolBar>
            <ToolBar>
                <Button ToolTip="Undo"
                        Command="{Binding UndoCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content"
                                    Value="{StaticResource UndoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Content"
                                            Value="{StaticResource UndoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button ToolTip="Redo"
                        Command="{Binding RedoCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content"
                                    Value="{StaticResource RedoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Content"
                                            Value="{StaticResource RedoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <xcad:DockingManager Margin="4,0,4,2"
                             AllowMixedOrientation="True">
            <xcad:LayoutRoot>
                <xcad:LayoutPanel>
                    <xcad:LayoutAnchorablePaneGroup Orientation="Vertical">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="3D View"
                                                   CanClose="False"
                                                   CanDockAsTabbedDocument="False"
                                                   CanHide="False"
                                                   CanAutoHide="False">
                                <controls:Cube3DView Frame="{Binding Frame}"
                                                     Command="{Binding VoxelClickCommand}" />
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                        <xcad:LayoutAnchorablePane DockHeight="200">
                            <xcad:LayoutAnchorable Title="Timeline"
                                                   CanClose="False"
                                                   CanDockAsTabbedDocument="False"
                                                   CanHide="False"
                                                   AutoHideWidth="300">
                                <StackPanel>
                                    <DockPanel>
                                        <xctk:IntegerUpDown DockPanel.Dock="Right"
                                                            Width="50"
                                                            VerticalAlignment="Bottom"
                                                            HorizontalAlignment="Center"
                                                            Value="{Binding Time}"
                                                            Minimum="{Binding StartDate}"
                                                            Maximum="{Binding EndDate}" />
                                        <ListBox ItemsSource="{Binding Groups}"
                                                 DisplayMemberPath="Name"
                                                 SelectedItem="{Binding SelectedGroup}">
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Margin="4,0,4,0"
                                                                Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                            <ListBox.ItemContainerStyle>
                                                <Style>
                                                    <Setter Property="Panel.Background"
                                                            Value="LightGray" />
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                        </ListBox>
                                    </DockPanel>
                                    <ListBox Height="100"
                                             ItemsSource="{Binding Tiles}"
                                             DisplayMemberPath="Name"
                                             SelectedItem="{Binding SelectedTile}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <xctk:TimelinePanel  Margin="4,0,4,0"
                                                                     VerticalAlignment="Top"
                                                                     BeginDate="{Binding StartDate, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource StartDateCorrection}}"
                                                                     EndDate="{Binding EndDate, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource EndDateCorrection}}"
                                                                     KeepOriginalOrderForOverlap="True" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemContainerStyle>
                                            <Style>
                                                <Setter Property="Panel.Background"
                                                        Value="LightGray" />
                                                <Setter Property="xctk:TimelinePanel.Date"
                                                        Value="{Binding Start, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource StartDateCorrection}}" />
                                                <Setter Property="xctk:TimelinePanel.DateEnd"
                                                        Value="{Binding End, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource EndDateCorrection}}" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>
                                    <Slider TickPlacement="TopLeft"
                                            Value="{Binding Time}"
                                            Minimum="{Binding StartDate, Converter={StaticResource IntToDoubleConverter}, ConverterParameter={StaticResource StartSliderCorrection}}"
                                            Maximum="{Binding EndDate, Converter={StaticResource IntToDoubleConverter}, ConverterParameter={StaticResource EndSliderCorrection}}" />
                                </StackPanel>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                    <xcad:LayoutAnchorablePaneGroup Orientation="Vertical"
                                                    DockWidth="300">
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Colors"
                                                   CanClose="False"
                                                   CanDockAsTabbedDocument="False"
                                                   CanHide="False"
                                                   AutoHideWidth="300">
                                <StackPanel>
                                    <DockPanel Margin="5">
                                        <DockPanel.Visibility>
                                            <Binding Path="ColorMode"
                                                     ConverterParameter="{x:Static model:ColorMode.MonoBrightness}">
                                                <Binding.Converter>
                                                    <converters:ValueConverterGroup>
                                                        <converters:EnumToBoolConverter />
                                                        <BooleanToVisibilityConverter />
                                                    </converters:ValueConverterGroup>
                                                </Binding.Converter>
                                            </Binding>
                                        </DockPanel.Visibility>
                                        <Border DockPanel.Dock="Left"
                                                VerticalAlignment="Center"
                                                Height="22"
                                                Width="22"
                                                BorderThickness="1"
                                                BorderBrush="#FFC9CACA">
                                            <Border.Resources>
                                                <ResourceDictionary>
                                                    <ResourceDictionary.MergedDictionaries>
                                                        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorCanvas/Themes/Generic.xaml" />
                                                        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorCanvas/Themes/Aero2.NormalColor.xaml" />
                                                    </ResourceDictionary.MergedDictionaries>
                                                </ResourceDictionary>
                                            </Border.Resources>
                                            <Rectangle Fill="{Binding DisplayColor, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                                        </Border>
                                        <xctk:ByteUpDown DockPanel.Dock="Right"
                                                         VerticalAlignment="Center"
                                                         Width="44"
                                                         Value="{Binding SelectedColor, Converter={StaticResource ColorToValueConverter}}">
                                        </xctk:ByteUpDown>
                                        <Slider VerticalAlignment="Center"
                                                Margin="4,6,4,6"
                                                Maximum="255"
                                                SmallChange="1"
                                                LargeChange="10"
                                                TickFrequency="1"
                                                Value="{Binding SelectedColor, Converter={StaticResource ColorToValueConverter}}">
                                        </Slider>
                                    </DockPanel>
                                    <xctk:ColorCanvas SelectedColor="{Binding SelectedColor}"
                                                      UsingAlphaChannel="False">
                                        <xctk:ColorCanvas.Visibility>
                                            <Binding Path="ColorMode"
                                                     ConverterParameter="{x:Static model:ColorMode.RGB}">
                                                <Binding.Converter>
                                                    <converters:ValueConverterGroup>
                                                        <converters:EnumToBoolConverter />
                                                        <BooleanToVisibilityConverter />
                                                    </converters:ValueConverterGroup>
                                                </Binding.Converter>
                                            </Binding>
                                        </xctk:ColorCanvas.Visibility>
                                    </xctk:ColorCanvas>
                                    <DockPanel>
                                        <DockPanel.Visibility>
                                            <Binding Path="ColorMode"
                                                     ConverterParameter="{x:Static model:ColorMode.Mono}">
                                                <Binding.Converter>
                                                    <converters:ValueConverterGroup>
                                                        <converters:EnumToBoolConverter />
                                                        <converters:InverseBoolConverter />
                                                        <BooleanToVisibilityConverter />
                                                    </converters:ValueConverterGroup>
                                                </Binding.Converter>
                                            </Binding>
                                        </DockPanel.Visibility>
                                        <ToggleButton DockPanel.Dock="Right"
                                                      Content="Pick"
                                                      IsChecked="{Binding ColorPickerTool}" />
                                        <ListBox ItemsSource="{Binding RecentColors}"
                                                 SelectedItem="{Binding RecentColor}">
                                            <ListBox.Resources>
                                                <ResourceDictionary>
                                                    <ResourceDictionary.MergedDictionaries>
                                                        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorPicker/Themes/Generic.xaml" />
                                                        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorPicker/Themes/Aero2.NormalColor.xaml" />
                                                    </ResourceDictionary.MergedDictionaries>
                                                </ResourceDictionary>
                                            </ListBox.Resources>
                                            <ListBox.Style>
                                                <StaticResource ResourceKey="ColorListStyle" />
                                            </ListBox.Style>
                                        </ListBox>
                                    </DockPanel>
                                </StackPanel>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                        <xcad:LayoutAnchorablePane>
                            <xcad:LayoutAnchorable Title="Properties"
                                                   CanClose="False"
                                                   CanDockAsTabbedDocument="False"
                                                   CanHide="False"
                                                   AutoHideWidth="300">
                                <StackPanel>
                                    <xctk:PropertyGrid SelectedObject="{Binding SelectedTileOrGroup}"
                                                       SelectedProperty="{Binding SelectedProperty, Mode=TwoWay}"
                                                       AutoGenerateProperties="False"
                                                       ShowSortOptions="False"
                                                       ShowSearchBox="False"
                                                       ShowSummary="False"
                                                       NameColumnWidth="120">
                                        <xctk:PropertyGrid.PropertyDefinitions>
                                            <xctk:PropertyDefinition TargetProperties="Name" />
                                            <xctk:PropertyDefinition TargetProperties="Start" />
                                            <xctk:PropertyDefinition TargetProperties="End" />
                                            <xctk:PropertyDefinition TargetProperties="Channel" />
                                            <xctk:PropertyDefinition TargetProperties="Hierarchy" />
                                            <xctk:PropertyDefinition TargetProperties="VoxelsProperty" />
                                            <xctk:PropertyDefinition TargetProperties="Offset" />
                                            <xctk:PropertyDefinition TargetProperties="Size" />
                                            <xctk:PropertyDefinition TargetProperties="From" />
                                            <xctk:PropertyDefinition TargetProperties="To" />
                                            <xctk:PropertyDefinition TargetProperties="ColorInterpolation" />
                                            <xctk:PropertyDefinition TargetProperties="TimeInterpolation" />
                                            <xctk:PropertyDefinition TargetProperties="RepeatCount" />
                                            <xctk:PropertyDefinition TargetProperties="Reverse" />
                                            <xctk:PropertyDefinition TargetProperties="ChildrenProperty" />
                                            <xctk:PropertyDefinition TargetProperties="ColorBlendMode" />
                                            <xctk:PropertyDefinition TargetProperties="Round" />
                                            <xctk:PropertyDefinition TargetProperties="Axis" />
                                            <xctk:PropertyDefinition TargetProperties="Plane" />
                                            <xctk:PropertyDefinition TargetProperties="Center" />
                                            <xctk:PropertyDefinition TargetProperties="Value" />
                                            <xctk:PropertyDefinition TargetProperties="WrapAround" />
                                            <xctk:PropertyDefinition TargetProperties="StartAngle" />
                                        </xctk:PropertyGrid.PropertyDefinitions>
                                        <xctk:PropertyGrid.EditorDefinitions>
                                            <xctk:EditorTemplateDefinition>
                                                <xctk:EditorTemplateDefinition.TargetProperties>
                                                    <xctk:TargetPropertyType Type="{x:Type Color}" />
                                                </xctk:EditorTemplateDefinition.TargetProperties>
                                                <xctk:EditorTemplateDefinition.EditingTemplate>
                                                    <DataTemplate>
                                                        <xctk:ColorPicker ShowAvailableColors="False"
                                                                          ShowRecentColors="False"
                                                                          ShowStandardColors="False"
                                                                          ShowTabHeaders="False"
                                                                          ColorMode="ColorCanvas"
                                                                          UsingAlphaChannel="False"
                                                                          SelectedColor="{Binding Value}" />
                                                    </DataTemplate>
                                                </xctk:EditorTemplateDefinition.EditingTemplate>
                                            </xctk:EditorTemplateDefinition>
                                            <xctk:EditorTemplateDefinition>
                                                <xctk:EditorTemplateDefinition.TargetProperties>
                                                    <xctk:TargetPropertyType Type="{x:Type Point}" />
                                                    <xctk:TargetPropertyType Type="{x:Type Vector}" />
                                                </xctk:EditorTemplateDefinition.TargetProperties>
                                                <xctk:EditorTemplateDefinition.EditingTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="1" />
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <xctk:PropertyGridEditorDoubleUpDown Grid.Column="0"
                                                                                                 Value="{Binding Value.X}"
                                                                                                 TextAlignment="Left" />
                                                            <Rectangle Grid.Column="1"
                                                                       Fill="#F0F0F0" />
                                                            <xctk:PropertyGridEditorDoubleUpDown Grid.Column="2"
                                                                                                 Value="{Binding Value.Y}"
                                                                                                 TextAlignment="Left" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </xctk:EditorTemplateDefinition.EditingTemplate>
                                            </xctk:EditorTemplateDefinition>
                                            <xctk:EditorTemplateDefinition>
                                                <xctk:EditorTemplateDefinition.TargetProperties>
                                                    <xctk:TargetPropertyType Type="{x:Type Point3D}" />
                                                    <xctk:TargetPropertyType Type="{x:Type Vector3D}" />
                                                </xctk:EditorTemplateDefinition.TargetProperties>
                                                <xctk:EditorTemplateDefinition.EditingTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="1" />
                                                                <ColumnDefinition />
                                                                <ColumnDefinition Width="1" />
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <xctk:PropertyGridEditorDoubleUpDown Grid.Column="0"
                                                                                                 Value="{Binding Value.X}"
                                                                                                 TextAlignment="Left" />
                                                            <Rectangle Grid.Column="1"
                                                                       Fill="#F0F0F0" />
                                                            <xctk:PropertyGridEditorDoubleUpDown Grid.Column="2"
                                                                                                 Value="{Binding Value.Y}"
                                                                                                 TextAlignment="Left" />
                                                            <Rectangle Grid.Column="3"
                                                                       Fill="#F0F0F0" />
                                                            <xctk:PropertyGridEditorDoubleUpDown Grid.Column="4"
                                                                                                 Value="{Binding Value.Z}"
                                                                                                 TextAlignment="Left" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </xctk:EditorTemplateDefinition.EditingTemplate>
                                            </xctk:EditorTemplateDefinition>
                                        </xctk:PropertyGrid.EditorDefinitions>
                                    </xctk:PropertyGrid>
                                    <Button Content="Delete tile"
                                            Command="{Binding RemoveTileCommand}" />
                                </StackPanel>
                            </xcad:LayoutAnchorable>
                        </xcad:LayoutAnchorablePane>
                    </xcad:LayoutAnchorablePaneGroup>
                </xcad:LayoutPanel>
            </xcad:LayoutRoot>
        </xcad:DockingManager>
    </DockPanel>
</Window>
