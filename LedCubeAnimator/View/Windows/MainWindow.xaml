<Window x:Class="LedCubeAnimator.View.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dock="https://github.com/Dirkster99/AvalonDock"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        xmlns:controls="clr-namespace:LedCubeAnimator.View.UserControls"
        mc:Ignorable="d"
        md:DialogServiceViews.IsRegistered="True"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        Title="LED Cube Animator"
        WindowState="Maximized"
        Height="450"
        Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/Icons/New.xaml" />
                <ResourceDictionary Source="/View/Icons/Open.xaml" />
                <ResourceDictionary Source="/View/Icons/Redo.xaml" />
                <ResourceDictionary Source="/View/Icons/RedoGray.xaml" />
                <ResourceDictionary Source="/View/Icons/Save.xaml" />
                <ResourceDictionary Source="/View/Icons/SaveAs.xaml" />
                <ResourceDictionary Source="/View/Icons/Undo.xaml" />
                <ResourceDictionary Source="/View/Icons/UndoGray.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding ClosingCommand}"
                                PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.InputBindings>
        <KeyBinding Command="{Binding UndoCommand}"
                    Key="Z"
                    Modifiers="Ctrl" />
        <KeyBinding Command="{Binding RedoCommand}"
                    Key="Y"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top"
              IsMainMenu="True">
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Icon="{StaticResource NewIcon}"
                          Command="{Binding NewCommand}" />
                <MenuItem Header="Open..."
                          Icon="{StaticResource OpenIcon}"
                          Command="{Binding OpenCommand}" />
                <MenuItem Header="Save"
                          Icon="{StaticResource SaveIcon}"
                          Command="{Binding SaveCommand}" />
                <MenuItem Header="Save as..."
                          Icon="{StaticResource SaveAsIcon}"
                          Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="Export">
                    <MenuItem Header="Binary file (.3db)..."
                              Command="{Binding ExportCommand}" />
                    <MenuItem Header="MW LED Cube file (.txt)..."
                              Command="{Binding ExportMWCommand}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit"
                          Click="Exit_Click" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo"
                          Command="{Binding UndoCommand}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Icon"
                                    Value="{StaticResource UndoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Icon"
                                            Value="{StaticResource UndoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <MenuItem Header="Redo"
                          Command="{Binding RedoCommand}">
                    <MenuItem.Style>
                        <Style TargetType="MenuItem">
                            <Setter Property="Icon"
                                    Value="{StaticResource RedoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Icon"
                                            Value="{StaticResource RedoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="3D View"
                          IsCheckable="True"
                          IsChecked="{Binding IsVisible, ElementName=Cube3DAnchorable}" />
                <MenuItem Header="Timeline"
                          IsCheckable="True"
                          IsChecked="{Binding IsVisible, ElementName=TimelineAnchorable}" />
                <MenuItem Header="Colors"
                          IsCheckable="True"
                          IsChecked="{Binding IsVisible, ElementName=ColorPickerAnchorable}" />
                <MenuItem Header="Properties"
                          IsCheckable="True"
                          IsChecked="{Binding IsVisible, ElementName=PropertiesAnchorable}" />
            </MenuItem>
            <MenuItem Header="Tile">
                <MenuItem Header="Frame"
                          Command="{Binding AddFrameCommand}" />
                <Separator />
                <MenuItem Header="Group"
                          Command="{Binding AddGroupCommand}" />
                <Separator />
                <MenuItem Header="GradientEffect"
                          Command="{Binding AddGradientEffectCommand}" />
                <Separator />
                <MenuItem Header="MoveEffect"
                          Command="{Binding AddMoveEffectCommand}" />
                <MenuItem Header="RotateEffect"
                          Command="{Binding AddRotateEffectCommand}" />
                <MenuItem Header="ScaleEffect"
                          Command="{Binding AddScaleEffectCommand}" />
                <MenuItem Header="ShearEffect"
                          Command="{Binding AddShearEffectCommand}" />
                <Separator />
                <MenuItem Header="LinearDelay"
                          Command="{Binding AddLinearDelayCommand}" />
                <MenuItem Header="RadialDelay"
                          Command="{Binding AddRadialDelayCommand}" />
                <MenuItem Header="SphericalDelay"
                          Command="{Binding AddSphericalDelayCommand}" />
                <MenuItem Header="AngularDelay"
                          Command="{Binding AddAngularDelayCommand}" />
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top"
                     IsLocked="True"
                     Background="#F0F0F0">
            <ToolBar>
                <Button ToolTip="New"
                        Content="{StaticResource NewIcon}"
                        Command="{Binding NewCommand}" />
                <Button ToolTip="Open..."
                        Content="{StaticResource OpenIcon}"
                        Command="{Binding OpenCommand}" />
                <Button ToolTip="Save"
                        Content="{StaticResource SaveIcon}"
                        Command="{Binding SaveCommand}" />
                <Button ToolTip="Save as..."
                        Content="{StaticResource SaveAsIcon}"
                        Command="{Binding SaveAsCommand}" />
            </ToolBar>
            <ToolBar>
                <Button ToolTip="Undo"
                        Command="{Binding UndoCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content"
                                    Value="{StaticResource UndoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Content"
                                            Value="{StaticResource UndoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button ToolTip="Redo"
                        Command="{Binding RedoCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Content"
                                    Value="{StaticResource RedoIcon}" />
                            <Style.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Content"
                                            Value="{StaticResource RedoGrayIcon}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </ToolBar>
        </ToolBarTray>
        <dock:DockingManager Margin="4,0,4,2"
                             AllowMixedOrientation="True">
            <dock:LayoutRoot>
                <dock:LayoutPanel>
                    <dock:LayoutAnchorablePaneGroup Orientation="Vertical"
                                                    DockWidth="4*">
                        <dock:LayoutAnchorablePane DockHeight="4*">
                            <dock:LayoutAnchorable x:Name="Cube3DAnchorable"
                                                   Title="3D View"
                                                   CanDockAsTabbedDocument="False"
                                                   CanAutoHide="False">
                                <controls:Cube3DControl DataContext="{Binding Cube3DViewModel}"
                                                        Frame="{Binding Frame}"
                                                        Command="{Binding VoxelClickCommand}" />
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                        <dock:LayoutAnchorablePane>
                            <dock:LayoutAnchorable x:Name="TimelineAnchorable"
                                                   Title="Timeline"
                                                   CanDockAsTabbedDocument="False"
                                                   AutoHideWidth="300">
                                <controls:TimelineControl DataContext="{Binding TimelineViewModel}" />
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                    </dock:LayoutAnchorablePaneGroup>
                    <dock:LayoutAnchorablePaneGroup Orientation="Vertical">
                        <dock:LayoutAnchorablePane>
                            <dock:LayoutAnchorable x:Name="ColorPickerAnchorable"
                                                   Title="Colors"
                                                   CanDockAsTabbedDocument="False"
                                                   AutoHideWidth="300">
                                <controls:ColorPickerControl DataContext="{Binding ColorPickerViewModel}" />
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                        <dock:LayoutAnchorablePane>
                            <dock:LayoutAnchorable x:Name="PropertiesAnchorable"
                                                   Title="Properties"
                                                   CanDockAsTabbedDocument="False"
                                                   AutoHideWidth="300">
                                <controls:PropertyControl DataContext="{Binding PropertyViewModel}" />
                            </dock:LayoutAnchorable>
                        </dock:LayoutAnchorablePane>
                    </dock:LayoutAnchorablePaneGroup>
                </dock:LayoutPanel>
            </dock:LayoutRoot>
        </dock:DockingManager>
    </DockPanel>
</Window>
