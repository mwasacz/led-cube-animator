<Window x:Class="LedCubeAnimator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:LedCubeAnimator"
        xmlns:model="clr-namespace:LedCubeAnimator.Model"
        mc:Ignorable="d"
        UseLayoutRounding="True"
        TextOptions.TextFormattingMode="Display"
        Title="MainWindow"
        WindowState="Maximized"
        Closing="MainWindow_Closing"
        Height="450"
        Width="800">
    <Window.InputBindings>
        <KeyBinding Command="{Binding UndoCommand}"
                    Key="Z"
                    Modifiers="Ctrl" />
        <KeyBinding Command="{Binding RedoCommand}"
                    Key="Y"
                    Modifiers="Ctrl" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top"
              IsMainMenu="True">
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Command="{Binding NewCommand}" />
                <MenuItem Header="Open..."
                          Command="{Binding OpenCommand}" />
                <MenuItem Header="Save"
                          Command="{Binding SaveCommand}" />
                <MenuItem Header="Save as..."
                          Command="{Binding SaveAsCommand}" />
                <Separator />
                <MenuItem Header="Export">
                    <MenuItem Header="MW LED Cube 4x4x4..."
                              Command="{Binding ExportMWCommand}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Exit"
                          Click="Exit_Click" />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo"
                          Command="{Binding UndoCommand}" />
                <MenuItem Header="Redo"
                          Command="{Binding RedoCommand}" />
            </MenuItem>
            <MenuItem Header="Tile">
                <MenuItem Header="Frame"
                          Command="{Binding AddFrameCommand}" />
                <Separator />
                <MenuItem Header="Group"
                          Command="{Binding AddGroupCommand}" />
                <Separator />
                <MenuItem Header="MoveEffect"
                          Command="{Binding AddMoveEffectCommand}" />
                <MenuItem Header="RotateEffect"
                          Command="{Binding AddRotateEffectCommand}" />
                <MenuItem Header="ScaleEffect"
                          Command="{Binding AddScaleEffectCommand}" />
                <MenuItem Header="ShearEffect"
                          Command="{Binding AddShearEffectCommand}" />
                <Separator />
                <MenuItem Header="LinearDelay"
                          Command="{Binding AddLinearDelayCommand}" />
                <MenuItem Header="RadialDelay"
                          Command="{Binding AddRadialDelayCommand}" />
                <MenuItem Header="SphericalDelay"
                          Command="{Binding AddSphericalDelayCommand}" />
                <MenuItem Header="AngularDelay"
                          Command="{Binding AddAngularDelayCommand}" />
            </MenuItem>
            <MenuItem Header="Options">
                <MenuItem Header="Cube settings..."
                          Command="{Binding CubeSettingsCommand}" />
            </MenuItem>
        </Menu>
        <DockPanel DockPanel.Dock="Right"
                   Width="233">
            <Border DockPanel.Dock="Top"
                    BorderBrush="DarkGray"
                    BorderThickness="1">
                <Border.Visibility>
                    <Binding Path="ColorMode"
                             ConverterParameter="{x:Static model:ColorMode.MonoBrightness}">
                        <Binding.Converter>
                            <local:ValueConverterGroup>
                                <local:EnumToBoolConverter />
                                <BooleanToVisibilityConverter />
                            </local:ValueConverterGroup>
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
                <DockPanel Margin="5">
                    <Border DockPanel.Dock="Left"
                            VerticalAlignment="Center"
                            Height="22"
                            Width="22"
                            BorderThickness="1"
                            BorderBrush="#FFC9CACA">
                        <Border.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorCanvas/Themes/Generic.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorCanvas/Themes/Aero2.NormalColor.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </Border.Resources>
                        <Rectangle Fill="{Binding DisplayColor, Converter={StaticResource ColorToSolidColorBrushConverter}}" />
                    </Border>
                    <xctk:ByteUpDown DockPanel.Dock="Right"
                                     VerticalAlignment="Center"
                                     Width="44"
                                     Value="{Binding SelectedColor, Converter={StaticResource ColorToValueConverter}}">
                    </xctk:ByteUpDown>
                    <Slider VerticalAlignment="Center"
                            Margin="4,6,4,6"
                            Maximum="255"
                            SmallChange="1"
                            LargeChange="10"
                            TickFrequency="1"
                            Value="{Binding SelectedColor, Converter={StaticResource ColorToValueConverter}}">
                    </Slider>
                </DockPanel>
            </Border>
            <xctk:ColorCanvas DockPanel.Dock="Top"
                              SelectedColor="{Binding SelectedColor}"
                              UsingAlphaChannel="False">
                <xctk:ColorCanvas.Visibility>
                    <Binding Path="ColorMode"
                             ConverterParameter="{x:Static model:ColorMode.RGB}">
                        <Binding.Converter>
                            <local:ValueConverterGroup>
                                <local:EnumToBoolConverter />
                                <BooleanToVisibilityConverter />
                            </local:ValueConverterGroup>
                        </Binding.Converter>
                    </Binding>
                </xctk:ColorCanvas.Visibility>
            </xctk:ColorCanvas>
            <Border DockPanel.Dock="Top"
                    BorderBrush="DarkGray"
                    BorderThickness="1">
                <Border.Visibility>
                    <Binding Path="ColorMode"
                             ConverterParameter="{x:Static model:ColorMode.Mono}">
                        <Binding.Converter>
                            <local:ValueConverterGroup>
                                <local:EnumToBoolConverter />
                                <local:InverseBoolConverter />
                                <BooleanToVisibilityConverter />
                            </local:ValueConverterGroup>
                        </Binding.Converter>
                    </Binding>
                </Border.Visibility>
                <DockPanel>
                    <ToggleButton DockPanel.Dock="Right"
                                  Content="Pick"
                                  IsChecked="{Binding ColorPickerTool}" />
                    <ListBox ItemsSource="{Binding RecentColors}"
                             SelectedItem="{Binding RecentColor}">
                        <ListBox.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorPicker/Themes/Generic.xaml" />
                                    <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/ColorPicker/Themes/Aero2.NormalColor.xaml" />
                                </ResourceDictionary.MergedDictionaries>
                            </ResourceDictionary>
                        </ListBox.Resources>
                        <ListBox.Style>
                            <StaticResource ResourceKey="ColorListStyle" />
                        </ListBox.Style>
                    </ListBox>
                </DockPanel>
            </Border>
            <xctk:PropertyGrid DockPanel.Dock="Top"
                               SelectedObject="{Binding SelectedTileOrGroup}"
                               SelectedProperty="{Binding SelectedProperty, Mode=TwoWay}"
                               AutoGenerateProperties="False"
                               ShowSortOptions="False"
                               ShowSearchBox="False"
                               ShowSummary="False">
                <xctk:PropertyGrid.PropertyDefinitions>
                    <xctk:PropertyDefinition TargetProperties="Name" />
                    <xctk:PropertyDefinition TargetProperties="Start" />
                    <xctk:PropertyDefinition TargetProperties="End" />
                    <xctk:PropertyDefinition TargetProperties="Channel" />
                    <xctk:PropertyDefinition TargetProperties="Hierarchy" />
                    <xctk:PropertyDefinition TargetProperties="VoxelsProperty" />
                    <xctk:PropertyDefinition TargetProperties="Offset" />
                    <xctk:PropertyDefinition TargetProperties="Size" />
                    <xctk:PropertyDefinition TargetProperties="From" />
                    <xctk:PropertyDefinition TargetProperties="To" />
                    <xctk:PropertyDefinition TargetProperties="TimeInterpolation" />
                    <xctk:PropertyDefinition TargetProperties="RepeatCount" />
                    <xctk:PropertyDefinition TargetProperties="Reverse" />
                    <xctk:PropertyDefinition TargetProperties="ChildrenProperty" />
                    <xctk:PropertyDefinition TargetProperties="ColorBlendMode" />
                    <xctk:PropertyDefinition TargetProperties="Round" />
                    <xctk:PropertyDefinition TargetProperties="Axis" />
                    <xctk:PropertyDefinition TargetProperties="Plane" />
                    <xctk:PropertyDefinition TargetProperties="Center" />
                    <xctk:PropertyDefinition TargetProperties="Value" />
                    <xctk:PropertyDefinition TargetProperties="WrapAround" />
                    <xctk:PropertyDefinition TargetProperties="StartAngle" />
                </xctk:PropertyGrid.PropertyDefinitions>
            </xctk:PropertyGrid>
            <Button DockPanel.Dock="Top"
                    Content="Delete tile"
                    Command="{Binding RemoveTileCommand}" />
            <xctk:IntegerUpDown DockPanel.Dock="Bottom"
                                Width="50"
                                VerticalAlignment="Bottom"
                                HorizontalAlignment="Center"
                                Value="{Binding Time}"
                                Minimum="{Binding StartDate}"
                                Maximum="{Binding EndDate}" />
        </DockPanel>
        <Border DockPanel.Dock="Bottom"
                BorderBrush="DarkGray"
                BorderThickness="1">
            <Slider TickPlacement="TopLeft"
                    Value="{Binding Time}"
                    Minimum="{Binding StartDate, Converter={StaticResource IntToDoubleConverter}, ConverterParameter={StaticResource StartSliderCorrection}}"
                    Maximum="{Binding EndDate, Converter={StaticResource IntToDoubleConverter}, ConverterParameter={StaticResource EndSliderCorrection}}" />
        </Border>
        <ListBox DockPanel.Dock="Bottom"
                 Height="100"
                 ItemsSource="{Binding Tiles}"
                 DisplayMemberPath="Name"
                 SelectedItem="{Binding SelectedTile}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <xctk:TimelinePanel  Margin="4,0,4,0"
                                         VerticalAlignment="Top"
                                         BeginDate="{Binding StartDate, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource StartDateCorrection}}"
                                         EndDate="{Binding EndDate, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource EndDateCorrection}}"
                                         KeepOriginalOrderForOverlap="True" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style>
                    <Setter Property="Panel.Background"
                            Value="LightGray" />
                    <Setter Property="xctk:TimelinePanel.Date"
                            Value="{Binding Start, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource StartDateCorrection}}" />
                    <Setter Property="xctk:TimelinePanel.DateEnd"
                            Value="{Binding End, Converter={StaticResource IntToDateTimeConverter}, ConverterParameter={StaticResource EndDateCorrection}}" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <ListBox DockPanel.Dock="Bottom"
                 ItemsSource="{Binding Groups}"
                 DisplayMemberPath="Name"
                 SelectedItem="{Binding SelectedGroup}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Margin="4,0,4,0"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style>
                    <Setter Property="Panel.Background"
                            Value="LightGray" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <local:Cube3DView Frame="{Binding Frame}"
                          Command="{Binding VoxelClickCommand}" />
    </DockPanel>
</Window>
